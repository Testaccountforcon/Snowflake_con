name: push-schemachange
# This workflow runs after successful completion of workflow 'files_count_check'
on:
  workflow_run:
    workflows: ["files_count_check"]
    types:
      - completed
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
   
jobs:

# This jobs deploys the GitHub changes to Snowflake using Schemachange
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest
    
    
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v2
  
      - name: Use Python 3.8.x
        uses: actions/setup-python@v2.2.1
        with:
          python-version: 3.8.x
# Creating an environment to access the Action Secrets
      - name: Run schemachange
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
# If schemacheck.txt is empty(i.e. GitHub and Snowflake Schemas match), then Schemachange pushes GitHub change script to Snowflake
        run: |
          if ! grep -q . "migrations/schemacheck.txt";
          then
            echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
            python --version
            echo "Step 1: Installing schemachange"
            pip install schemachange        
            echo "Step 2: Running schemachange"
            schemachange -f $GITHUB_WORKSPACE/migrations -a $SF_ACCOUNT -u $SF_USERNAME -r $SF_ROLE -w $SF_WAREHOUSE -d $SF_DATABASE -c $SF_DATABASE.SCHEMACHANGE.CHANGE_HISTORY
          fi
  # This job extracts the latest schema from Snowflake after changes have been pushed to Snowflake using Schemachange and stores it in 'reference-schema'
  Schema_extration:
    name: Schema Extraction
    runs-on: ubuntu-latest
    needs: deploy-snowflake-changes-job
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: running the python file
        env:
          SF_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
          SF_USERNAME: ${{ secrets.SF_USERNAME }}
          SF_ROLE: ${{ secrets.SF_ROLE }}
          SF_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
          SF_DATABASE: ${{ secrets.SF_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
          GT_username: ${{ secrets.GT_USERNAME }}
          GT_password: ${{ secrets.GT_PASSWORD }}
          GT_auth_token: ${{ secrets.GT_AUTH_TOKEN }}
        run: |
          if ! grep -q . "migrations/schemacheck.txt";
          then
            pip install pandas
            pip3 install PyGithub
            pip install auth
            pip install snowflake-connector-python
            python -c 'import os;print(os.environ)'
            pip install python-dotenv
            git config --global user.email "sunit_tanwar@merilytics.com"
            git config --global user.name "Testaccountforcon"
            git pull
            git rm -rf reference-schema
            git commit -m "commit message"
            git push origin master
            python migrations/reference_schema_update.py
          fi  
          
